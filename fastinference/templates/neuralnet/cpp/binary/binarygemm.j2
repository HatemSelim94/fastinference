{#
 # Binary General Matrix Multiplication
 #}

// Layer {{ layer_id }}: Gemm
for (int d = 0; d < {{ output_size }}; d++) {
  layer_{{ layer_id }}_output[d] = layer_{{ layer_id }}_bias[d];
}
for (int d = 0; d < {{ output_size }}; d++) {
  for (int i = 0; i < {{ (input_size / backend.binary_word_size)|round(method='ceil')|int }}; i++) {
    layer_{{ layer_id }}_output[d] += 2 * {{ backend.popcount }}(({{ backend.data_types['binary'] }})~({{ backend.data_types['binary'] }})(layer_{{ layer_id }}_weight[d][i] ^ layer_{{ layer_id - 1 }}_output[i])) - {{ backend.binary_word_size }};
  }
}
